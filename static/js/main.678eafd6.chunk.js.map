{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/uiReducer.js","store/store.js","firebase/firebase-config.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/FormLogin.js","components/auth/NavForm.js","components/auth/OthersRegister.js","components/auth/LoginScreen.js","components/auth/ReassignScreen.js","components/auth/FormRegister.js","components/auth/RegisterScreen.js","routers/PrivateRoute.js","components/ui/Footbar.js","components/ui/Navbar.js","components/Comfeco.js","routers/PublicRoute.js","routers/AppRouter.js","ComfecoApp.js","index.js"],"names":["types","authReducer","state","action","type","uid","payload","name","displayName","initialState","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","ui","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","catch","e","console","log","useForm","useState","value","setValue","reset","handleInputChange","target","FormLogin","useDispatch","useSelector","formValue","onSubmit","preventDefault","className","id","placeholder","onChange","to","disabled","NavForm","activeClassName","exact","OthersRegister","onClick","signInWithPopup","LoginScreen","ReassignScreen","FormRegister","nick","passwordVerificar","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","RegistrerScreen","PrivateRoute","isAuthenticated","Component","component","rest","props","Footbar","src","alt","Navbar","Comfeco","PublicRoute","AppRouter","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","path","RegisterScreen","ComfecoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.678eafd6.chunk.js","sourcesContent":["\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    \n    uiStartLoading: '[UI] Start Loading',\n    uiFinishLoading: '[UI] Finish Loading',\n}","import { types } from \"../types/types\";\n\nconst authReducer = ( state ={}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return{\n                uid:action.payload.uid,\n                name:action.payload.displayName\n            }\n\n        case types.logout:\n            return { }\n            \n        default:\n            return state;\n    }\n}\n\nexport default authReducer;\n","import { types } from '../types/types';\n\n\nconst initialState ={\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer =( state=initialState, action )=>{\n    \n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n\n            default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport authReducer from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers= combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n});\n\nexport const store =createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);  ","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n const firebaseConfig = {\n    apiKey: \"AIzaSyDnCNVgd4DbPQGRGgLkokR75tgjkcgJKR4\",\n    authDomain: \"login-react-a0855.firebaseapp.com\",\n    projectId: \"login-react-a0855\",\n    storageBucket: \"login-react-a0855.appspot.com\",\n    messagingSenderId: \"696848255815\",\n    appId: \"1:696848255815:web:da5555c3332d5fdb9d5a62\"\n  };\n  \n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }","import { types } from '../types/types';\n\n\nexport const setError = ( err )=>({\n    type: types.uiSetError,\n    payload: err\n})\n\n\nexport const removeError = ()=>({\n    type: types.uiRemoveError\n})\n\n\nexport const startLoading = ()=>({\n    type: types.uiStartLoading\n})\n\n\nexport const finishLoading = ()=>({\n    type: types.uiFinishLoading\n})","import { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { finishLoading, startLoading } from './ui';\n\n\nexport const startLoginEmailPassword = (email,password) => {\n    return (dispatch)=>{\n\n        dispatch(startLoading());\n        firebase.auth().signInWithEmailAndPassword(email,password)\n            .then(  ({user})=>{                \n                dispatch(login(user.uid,user.displayName));\n                dispatch(finishLoading());\n            })\n            .catch(e =>{\n                console.log(e);\n                dispatch(finishLoading());\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email,password,nick )=>{\n    return(dispatch)=>{\n        firebase.auth().createUserWithEmailAndPassword(email,password)\n            .then( async ({user})=>{\n                await user.updateProfile({displayName:nick});\n                dispatch(login(user.uid,user.displayName));\n            })\n            .catch(e =>{\n                console.log(e);\n            })\n    }\n}\n\nexport const startGoogleLogin = () =>{\n    return(dispatch)=>{\n        firebase.auth().signInWithPopup( googleAuthProvider )\n        .then(({user}) =>{\n            dispatch(\n                login( user.uid,user.displayName )\n            )\n        });\n    }\n}\n\n\nexport const login = ( uid, displayName )=> ({\n    type:types.login,\n    payload: {\n        uid,\n        displayName\n    }\n})","import { useState } from 'react';\n\nconst useForm = ( initialState = {} ) => {\n\n    const [value, setValue] = useState(initialState);\n\n    const reset =()=>{\n        setValue(initialState);\n    }\n\n    const handleInputChange = ({ target }) =>{\n        \n        setValue({\n            ...value,\n            [target.name]:target.value\n        });\n    };\n\n    return [ value, handleInputChange ,reset ];\n}\n\nexport default useForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; \nimport { Link } from 'react-router-dom';\nimport { startLoginEmailPassword } from '../../actions/auth';\nimport useForm from '../../hooks/useForm';\n\nconst FormLogin = () => {\n\n  const dispatch = useDispatch(); \n\n  const {loading} = useSelector(state => state.ui)\n \n  const [ formValue, handleInputChange ] = useForm({\n    email:'',\n    password:''\n  });\n\n  const { email,password } = formValue;\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    dispatch( startLoginEmailPassword(email,password));\n  }\n\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <div className=\"py-2\">\n        <input type=\"text\" \n          name=\"email\" \n          id=\"email\" \n          className=\"form-control\"\n          placeholder =\"Correo electrónico\"\n          value= { email }\n          onChange={ handleInputChange }\n        />\n      </div>\n      <div className=\"py-2\">\n              <input type=\"password\" \n          name=\"password\"\n          id=\"password\"\n          className=\"form-control\"\n          placeholder =\"Contraceña\"\n          value={ password }\n          onChange={ handleInputChange }          \n          />\n      </div>\n\n      <div className=\"row py-3 text-sm-center text-md-center\" >\n        <div className=\"col-sm-12 col-md-8 col-lg-6\">\n          <Link to=\"/reassign\" className=\"link\">¿Olvidaste tu contraseña?</Link>\n        </div>\n        <div className=\"col-sm-12 col-md-8 col-lg-6 text-white \">\n          <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" /> Mantenerme\n          conectado.\n        </div>\n      </div>\n      <div className=\"py-2\">\n        <button className=\"btn btn-secondary btn-block py-2\" disabled={ loading }>Ingresar</button>\n      </div>\n      <p className=\"text-center py-2 text-white font-weight-bold\">También puedes iniciar con tus redes</p>\n    </form>\n  );\n};\n\nexport default FormLogin;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavForm = () => {\n    return (\n        <div className=\"row pb-5\">\n            <div className=\"col-sm-10 col-md-4 col-lg-5 text-center\">\n            <NavLink \n                        className=\"font-weight-bold nav-form\"\n                        activeClassName=\"active\"\n                        exact\n                        to=\"/login\"\n                    >\n                Iniciar sesión \n            </NavLink>\n                        \n            </div>\n            <div className=\"col-sm-1 col-md-4 col-lg-2 text-center\">|</div>\n            <div className=\"col-sm-12 col-md-4 col-lg-5 text-center\">\n            <NavLink    \n                        className=\"font-weight-bold nav-form\"\n                        activeClassName=\"active\"\n                        exact\n                        to=\"/register\"\n                    >\n                Registrate\n            </NavLink>\n            </div>\n        </div>\n    );\n};\n\nexport default NavForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux'; \nimport { startGoogleLogin } from '../../actions/auth';\n\nconst OthersRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const handleGoogleLogin = () =>{\n        dispatch( startGoogleLogin() );\n    }\n\n\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-6 text-center\">\n                <button className=\"btn btn-secondary\">Ingresar con Facebook</button>\n            </div>\n            <div className=\"col-6 text-center\">\n                <button className=\"btn btn-secondary\" onClick={ handleGoogleLogin }>Ingresar con Google</button>\n            </div>\n        </div>\n    );\n};\n\nexport default OthersRegister;\n","import React from 'react';\nimport FormLogin from './FormLogin';\nimport NavForm from './NavForm';\nimport OthersRegister from './OthersRegister';\n\nconst LoginScreen = () => {\n    return (\n        <>\n            \n            <div className=\"card col-sm-12 col-md-8 col-lg-6 bg-dark p-lg-5 p-sm-5 p-md-4 p-5\">\n                <NavForm />\n                <FormLogin />\n                <OthersRegister />\n            </div>\n        </>\n    );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useForm from '../../hooks/useForm';\n\nconst ReassignScreen = () => {\n\n    const [formValue, handleInputChange ]= useForm({\n        email:''\n    });\n\n    const { email }= formValue;\n\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        console.log(email);\n    }\n\n\n\n\n\n\n    return (\n        <div className=\"card col-sm-12 col-md-8 col-lg-6 bg-dark p-lg-5 p-sm-5 p-md-4 p-5\">\n            <h2 className=\"reassign\">Reasignar contraceña</h2>\n            <p className=\"text-white\">Te enviaremos un correo electrónico con un enlace privado para que reasignes tu contraceña. Este enlace sera valido por una hora.</p>\n            <form onSubmit = { handleSubmit }>\n                <div className=\"py-2\">\n                    <input type=\"text\"\n                        name=\"email\"\n                        placeholder =\"Correo electrónico\"\n                        className=\"form-control\"\n                        value = { email }\n                        onChange={ handleInputChange }\n                    />\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <button className=\"btn btn-secondary\">\n                            Enviar enlace\n                        </button>\n                    </div>\n                    <div className=\"col-6 text-right\">\n                        <Link to=\"/login\" className=\"link \">Iniciar sesión</Link>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    );\n};\n\nexport default ReassignScreen;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\n\n\nimport validator from 'validator';\n\n\n\n\n\nimport useForm from '../../hooks/useForm';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nconst FormRegister = () => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector(state => state.ui)\n\n    const [formValue, handleInputChange ] = useForm({\n      nick:'',\n      email:'',\n      password:'',\n      passwordVerificar:''\n    });\n\n\n    const { nick, email, password, passwordVerificar } = formValue;\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n\n      if( isFormValid()){\n        dispatch(startRegisterWithEmailPasswordName(email,password,nick));\n      }\n\n    }\n\n\n    const isFormValid = ()=>{\n\n      if( nick.trim().length < 3){\n        dispatch( setError('Se requiere el nick'));\n        return false;\n      }else if(!validator.isEmail(email)){\n        dispatch( setError('El Email no es valido'));   \n        return false;\n      }else if(password!==passwordVerificar || password < 6){\n        dispatch( setError('La contraceña debe tener mas de 6 caracteres y considir con la otra.'));\n        return false;\n      }\n\n      dispatch(removeError);\n      return true;\n    }\n\n    return (\n        <>\n          {\n            msgError &&\n            (\n              <div className=\"\">\n                msgError\n              </div>\n            )\n          }\n\n          <form onSubmit={ handleSubmit }>\n            <div className=\"py-2\">\n              <input type=\"text\" \n                name=\"nick\" \n                id=\"nick\"\n                className=\"form-control\"\n                placeholder =\"Nick\"\n                value = { nick } \n                onChange={ handleInputChange }\n              />  \n            </div>\n            <div className=\"py-2\">\n              <input type=\"text\" \n                name=\"email\" \n                id=\"email\" \n                className=\"form-control\"\n                placeholder =\"Correo electrónico\"\n                value={ email }\n                onChange = { handleInputChange }\n              />\n            </div>\n            <div className=\"py-2\">\n              <input type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                className=\"form-control\"\n                placeholder =\"Contraceña\"\n                value={ password }\n                onChange = { handleInputChange }\n              />\n            </div>\n            <div className=\"py-2\">\n              <input type=\"password\" \n                name=\"passwordVerificar\" \n                id=\"passwordVerificar\" \n                className=\"form-control\"\n                placeholder =\"Verificar la Contraceña\"\n                value = { passwordVerificar }\n                onChange ={ handleInputChange }\n              /> \n            </div>\n  \n          <div className=\"py-1\">\n            <button className=\"btn btn-secondary btn-block\">Crear una cuenta</button>\n          </div>\n          <p className=\"text-center py-1 text-white font-weight-bold\">O regístrate usando</p>\n        </form>\n      </>\n    );\n};\n\nexport default FormRegister;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FormRegister from './FormRegister';\nimport NavForm from './NavForm';\nimport OthersRegister from './OthersRegister';\n\nconst RegistrerScreen = () => {\n    return (\n        <div className=\"card col-sm-12 col-md-8 col-lg-6 bg-dark p-lg-5 p-sm-5 p-md-4 p-5\">\n            <NavForm />\n            <FormRegister/>\n            <OthersRegister/>   \n            <p className =\"text-white text-center pt-4 terminos\">Al registrate, estas aceptando <Link to=\"\" >Términos y condiciones</Link> y la \n            <Link to=\"\" > Política de privacidad y protección de datos</Link> de COMFECO\n            </p>  \n        </div>\n    );\n};\n\nexport default RegistrerScreen;\n","import React, { Component } from 'react';\n\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) =>{\n    return(\n\n        <Route {...rest} \n            component = { (props)=>(\n                (isAuthenticated)\n                ? ( <Component {...props}/>)\n                : ( <Redirect to=\"/login\" />)\n            )}\n\n        />\n    ) \n}","import React from 'react';\n\nconst Footbar = () => {\n    return (\n        <>\n            <footer className=\"bg-dark container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-sm-12 col-md-4 text-white text-center font-weight-bold py-2\">Copyright ©2020</div>\n                    <div className=\"col-lg-4 col-sm-12 col-md-4 text-white text-center font-weight-bold py-2\">Developed by Team 51 Comfeco</div>\n                    <div className=\"col-lg-4 d-flex justify-content-center\">\n                        <img src={`./assets/facebook.svg`} alt=\"Facebook\" className=\"img-svg\"/>\n                        <img src={`./assets/discord.svg`} alt=\"Discord\" className=\"img-svg\" />\n                        <img src={`./assets/youtube-icon.svg`} alt=\"Youtube\" className=\"img-svg\" />\n                    </div>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footbar\n","\nimport React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                <img src={`./assets/logo.png`} alt=\"Logo\" className=\"img-logo\"/>\n            </Link>\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    {/* <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/login\"\n                    >\n                        Logout\n                    </NavLink> */}\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\nimport {useSelector} from 'react-redux';\n\n\n\n\nconst Comfeco = () => {\n\n    const {displayName} = useSelector(state => state.auth)   \n\n    return (\n        <div>\n            <h1>Hola {displayName}</h1>\n        </div>\n    )\n}\n\nexport default Comfeco;\n","import React, { Component } from 'react';\n\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) =>{\n    return(\n\n        <Route {...rest} \n            component = { (props)=>(\n                ( !isAuthenticated )\n                ? ( <Component {...props}/>)\n                : ( <Redirect to=\"/\" />)\n            )}\n\n        />\n    ) \n}","import React,{ useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n  } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config';\n\nimport LoginScreen from '../components/auth/LoginScreen';\nimport ReassignScreen from '../components/auth/ReassignScreen';\nimport RegisterScreen from '../components/auth/RegisterScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport Footbar from '../components/ui/Footbar';\nimport { Navbar } from '../components/ui/Navbar';\nimport { login } from '../actions/auth';\nimport Comfeco from '../components/Comfeco';\nimport { PublicRoute } from './PublicRoute';\n\nconst AppRouter = () => {\n\n\n    const dispatch = useDispatch();\n\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user)=>{\n            if(user?.uid){\n                dispatch(login( user.uid, user.displayName ));\n                setIsLoggedIn(true);\n            }else{\n                setIsLoggedIn(false);\n            }\n        })\n    }, [ dispatch, isLoggedIn ]);\n\n\n    return (\n        <Router>\n            <div>\n            <Navbar />\n                <div className=\"container-md d-flex d-flex justify-content-center align-items-center flex-wrap p-2 p-md-4 app\">                    \n                    <Switch>\n                        <PublicRoute exact path=\"/login\" component={ LoginScreen } isAuthenticated ={isLoggedIn} />\n                        <PublicRoute exact path=\"/register\" component={ RegisterScreen } isAuthenticated ={isLoggedIn} />\n                        <PublicRoute exact path=\"/reassign\" component={ ReassignScreen } isAuthenticated ={isLoggedIn} />\n                        <PrivateRoute  \n                            isAuthenticated ={isLoggedIn}\n                            path=\"/\" \n                            component={ Comfeco } \n                        />\n                    </Switch>\n                </div>\n                <Footbar />\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport AppRouter from './routers/AppRouter';\n\nconst ComfecoApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default ComfecoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ComfecoApp from './ComfecoApp';\n\nimport './styles/styles.css';\n\n\n\nReactDOM.render(\n  <ComfecoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}